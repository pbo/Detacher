var onRun = function(context) {
    var symbolsContainer = context.document.documentData().layerSymbols()
    var stylesContainer = context.document.documentData().layerStyles()
    var textStylesContainer = context.document.documentData().layerTextStyles()

    function detachFromSymbolAndStyle(layer) {
        // Try to detach this layer from shared symbol and/or shared style and/or text style
        if (layer.isSharedObject()) {
            if (layer.respondsToSelector("sharedObjectID")) {
                var symbol = symbolsContainer.symbolForInstance(layer)
                if (symbol) {
                    symbol.unregisterInstance(layer)
                }
            }

            if (layer.respondsToSelector("style")) {
                var style = layer.style()

                var sharedStyle = stylesContainer.sharedStyleForInstance(style)
                if (sharedStyle) {
                    sharedStyle.unregisterInstance(style)
                }

                sharedStyle = textStylesContainer.sharedStyleForInstance(style)
                if (sharedStyle) {
                    sharedStyle.unregisterInstance(style)
                }
            }
        }

        // Recursively try to detach all childs
        if (layer.respondsToSelector("layers")) {
            var layers = layer.layers()
            for (var i = 0; i < layers.count(); i++) {
                detachFromSymbolAndStyle(layers.objectAtIndex(i))
            }
        }
    }

    // Detach selection from symbols and styles
    for (i = 0; i < context.selection.count(); i++) {
        detachFromSymbolAndStyle(context.selection.objectAtIndex(i))
    }
}
